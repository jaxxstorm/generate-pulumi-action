// automatically generated by the FlatBuffers compiler, do not modify
/**
 * @enum
 */
export var __std;
(function (__std) {
    let DeferredRetval;
    (function (DeferredRetval) {
        DeferredRetval[DeferredRetval["NONE"] = 0] = "NONE";
        DeferredRetval[DeferredRetval["Deferred"] = 1] = "Deferred";
        DeferredRetval[DeferredRetval["Error"] = 2] = "Error";
    })(DeferredRetval = __std.DeferredRetval || (__std.DeferredRetval = {}));
})(__std || (__std = {}));
;
/**
 * @enum
 */
(function (__std) {
    let FulfilmentValue;
    (function (FulfilmentValue) {
        FulfilmentValue[FulfilmentValue["NONE"] = 0] = "NONE";
        FulfilmentValue[FulfilmentValue["Data"] = 1] = "Data";
        FulfilmentValue[FulfilmentValue["EndOfStream"] = 2] = "EndOfStream";
        FulfilmentValue[FulfilmentValue["Error"] = 3] = "Error";
    })(FulfilmentValue = __std.FulfilmentValue || (__std.FulfilmentValue = {}));
})(__std || (__std = {}));
;
/**
 * @enum
 */
(function (__std) {
    let FileSystemRetval;
    (function (FileSystemRetval) {
        FileSystemRetval[FileSystemRetval["NONE"] = 0] = "NONE";
        FileSystemRetval[FileSystemRetval["FileInfo"] = 1] = "FileInfo";
        FileSystemRetval[FileSystemRetval["Directory"] = 2] = "Directory";
        FileSystemRetval[FileSystemRetval["Error"] = 3] = "Error";
    })(FileSystemRetval = __std.FileSystemRetval || (__std.FileSystemRetval = {}));
})(__std || (__std = {}));
;
/**
 * @enum
 */
(function (__std) {
    let Format;
    (function (Format) {
        Format[Format["FromExtension"] = 0] = "FromExtension";
        Format[Format["JSON"] = 1] = "JSON";
        Format[Format["YAML"] = 2] = "YAML";
        Format[Format["Raw"] = 3] = "Raw";
        Format[Format["YAMLStream"] = 4] = "YAMLStream";
        Format[Format["JSONStream"] = 5] = "JSONStream";
        Format[Format["HCL"] = 6] = "HCL";
    })(Format = __std.Format || (__std.Format = {}));
})(__std || (__std = {}));
;
/**
 * Encoding specifies the requested form of the contents to read;
 * either just the raw bytes, or as a UTF-16 string. Distinguishing
 * String (a UTF16-encoded string) is desirable because JavaScript
 * natively supports UTF-16, so if you want to be able
 * to decode a string value conveniently, it is best to ship it as
 * UTF-16. Similarly, JSON is there as a means of sending structured
 * data, e.g., YAML, in a way that JavaScript can digest easily.
 *
 * @enum
 */
(function (__std) {
    let Encoding;
    (function (Encoding) {
        Encoding[Encoding["Bytes"] = 0] = "Bytes";
        Encoding[Encoding["String"] = 1] = "String";
        Encoding[Encoding["JSON"] = 2] = "JSON";
    })(Encoding = __std.Encoding || (__std.Encoding = {}));
})(__std || (__std = {}));
;
/**
 * @enum
 */
(function (__std) {
    let ParamType;
    (function (ParamType) {
        ParamType[ParamType["Boolean"] = 0] = "Boolean";
        ParamType[ParamType["Number"] = 1] = "Number";
        ParamType[ParamType["String"] = 2] = "String";
        ParamType[ParamType["Object"] = 3] = "Object";
    })(ParamType = __std.ParamType || (__std.ParamType = {}));
})(__std || (__std = {}));
;
/**
 * @enum
 */
(function (__std) {
    let ParamRetval;
    (function (ParamRetval) {
        ParamRetval[ParamRetval["NONE"] = 0] = "NONE";
        ParamRetval[ParamRetval["ParamValue"] = 1] = "ParamValue";
        ParamRetval[ParamRetval["Error"] = 2] = "Error";
    })(ParamRetval = __std.ParamRetval || (__std.ParamRetval = {}));
})(__std || (__std = {}));
;
/**
 * @enum
 */
(function (__std) {
    let ParseUnparseRetval;
    (function (ParseUnparseRetval) {
        ParseUnparseRetval[ParseUnparseRetval["NONE"] = 0] = "NONE";
        ParseUnparseRetval[ParseUnparseRetval["ParseUnparseData"] = 1] = "ParseUnparseData";
        ParseUnparseRetval[ParseUnparseRetval["Error"] = 2] = "Error";
    })(ParseUnparseRetval = __std.ParseUnparseRetval || (__std.ParseUnparseRetval = {}));
})(__std || (__std = {}));
;
/**
 * @enum
 */
(function (__std) {
    let Args;
    (function (Args) {
        Args[Args["NONE"] = 0] = "NONE";
        Args[Args["WriteArgs"] = 1] = "WriteArgs";
        Args[Args["ReadArgs"] = 2] = "ReadArgs";
        Args[Args["ParseArgs"] = 3] = "ParseArgs";
        Args[Args["UnparseArgs"] = 4] = "UnparseArgs";
        Args[Args["CancelArgs"] = 5] = "CancelArgs";
        Args[Args["FileInfoArgs"] = 6] = "FileInfoArgs";
        Args[Args["ListArgs"] = 7] = "ListArgs";
        Args[Args["ParamArgs"] = 8] = "ParamArgs";
    })(Args = __std.Args || (__std.Args = {}));
})(__std || (__std = {}));
;
/**
 * Error encodes an error either in accepting a request, or in fulfilling it (in deferreds).
 *
 * @constructor
 */
(function (__std) {
    class Error {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Error
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Error= obj
         * @returns Error
         */
        static getRootAsError(bb, obj) {
            return (obj || new Error).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        message(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startError(builder) {
            builder.startObject(1);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset messageOffset
         */
        static addMessage(builder, messageOffset) {
            builder.addFieldOffset(0, messageOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endError(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.Error = Error;
})(__std || (__std = {}));
/**
 * CancelArgs encodes a message cancelling a deferred response.
 *
 * @constructor
 */
(function (__std) {
    class CancelArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns CancelArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param CancelArgs= obj
         * @returns CancelArgs
         */
        static getRootAsCancelArgs(bb, obj) {
            return (obj || new CancelArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns flatbuffers.Long
         */
        serial() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startCancelArgs(builder) {
            builder.startObject(1);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Long serial
         */
        static addSerial(builder, serial) {
            builder.addFieldInt64(0, serial, builder.createLong(0, 0));
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endCancelArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.CancelArgs = CancelArgs;
})(__std || (__std = {}));
/**
 * Deferred encodes a serial number, standing in for an result or results to be fulfilled later.
 *
 * @constructor
 */
(function (__std) {
    class Deferred {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Deferred
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Deferred= obj
         * @returns Deferred
         */
        static getRootAsDeferred(bb, obj) {
            return (obj || new Deferred).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns flatbuffers.Long
         */
        serial() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startDeferred(builder) {
            builder.startObject(1);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Long serial
         */
        static addSerial(builder, serial) {
            builder.addFieldInt64(0, serial, builder.createLong(0, 0));
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endDeferred(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.Deferred = Deferred;
})(__std || (__std = {}));
/**
 * Response encodes the _synchronous_ response to a message expecting a deferred value or values.
 *
 * @constructor
 */
(function (__std) {
    class DeferredResponse {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns DeferredResponse
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param DeferredResponse= obj
         * @returns DeferredResponse
         */
        static getRootAsDeferredResponse(bb, obj) {
            return (obj || new DeferredResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns __std.DeferredRetval
         */
        retvalType() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : __std.DeferredRetval.NONE;
        }
        ;
        /**
         * @param flatbuffers.Table obj
         * @returns ?flatbuffers.Table
         */
        retval(obj) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startDeferredResponse(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.DeferredRetval retvalType
         */
        static addRetvalType(builder, retvalType) {
            builder.addFieldInt8(0, retvalType, __std.DeferredRetval.NONE);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset retvalOffset
         */
        static addRetval(builder, retvalOffset) {
            builder.addFieldOffset(1, retvalOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endDeferredResponse(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.DeferredResponse = DeferredResponse;
})(__std || (__std = {}));
/**
 * Data is data sent as (possibly partial) fulfilment of a deferred result.
 *
 * @constructor
 */
(function (__std) {
    class Data {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Data
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Data= obj
         * @returns Data
         */
        static getRootAsData(bb, obj) {
            return (obj || new Data).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @param number index
         * @returns number
         */
        bytes(index) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
        }
        ;
        /**
         * @returns number
         */
        bytesLength() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
        }
        ;
        /**
         * @returns Uint8Array
         */
        bytesArray() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startData(builder) {
            builder.startObject(1);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset bytesOffset
         */
        static addBytes(builder, bytesOffset) {
            builder.addFieldOffset(0, bytesOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<number> data
         * @returns flatbuffers.Offset
         */
        static createBytesVector(builder, data) {
            builder.startVector(1, data.length, 1);
            for (var i = data.length - 1; i >= 0; i--) {
                builder.addInt8(data[i]);
            }
            return builder.endVector();
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startBytesVector(builder, numElems) {
            builder.startVector(1, numElems, 1);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endData(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.Data = Data;
})(__std || (__std = {}));
/**
 * EndOfStream signals that there will be no more data.
 *
 * @constructor
 */
(function (__std) {
    class EndOfStream {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns EndOfStream
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param EndOfStream= obj
         * @returns EndOfStream
         */
        static getRootAsEndOfStream(bb, obj) {
            return (obj || new EndOfStream).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startEndOfStream(builder) {
            builder.startObject(0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endEndOfStream(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.EndOfStream = EndOfStream;
})(__std || (__std = {}));
/**
 * Resolution represents the _asynchronous_ fulfilment of a deferred value (possibly one of many values).
 *
 * @constructor
 */
(function (__std) {
    class Fulfilment {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Fulfilment
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Fulfilment= obj
         * @returns Fulfilment
         */
        static getRootAsFulfilment(bb, obj) {
            return (obj || new Fulfilment).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns flatbuffers.Long
         */
        serial() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
        }
        ;
        /**
         * @returns __std.FulfilmentValue
         */
        valueType() {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : __std.FulfilmentValue.NONE;
        }
        ;
        /**
         * @param flatbuffers.Table obj
         * @returns ?flatbuffers.Table
         */
        value(obj) {
            var offset = this.bb.__offset(this.bb_pos, 8);
            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startFulfilment(builder) {
            builder.startObject(3);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Long serial
         */
        static addSerial(builder, serial) {
            builder.addFieldInt64(0, serial, builder.createLong(0, 0));
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.FulfilmentValue valueType
         */
        static addValueType(builder, valueType) {
            builder.addFieldInt8(1, valueType, __std.FulfilmentValue.NONE);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset valueOffset
         */
        static addValue(builder, valueOffset) {
            builder.addFieldOffset(2, valueOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endFulfilment(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.Fulfilment = Fulfilment;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class FileInfo {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns FileInfo
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param FileInfo= obj
         * @returns FileInfo
         */
        static getRootAsFileInfo(bb, obj) {
            return (obj || new FileInfo).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        name(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        path(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @returns boolean
         */
        isdir() {
            var offset = this.bb.__offset(this.bb_pos, 8);
            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startFileInfo(builder) {
            builder.startObject(3);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder, nameOffset) {
            builder.addFieldOffset(0, nameOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pathOffset
         */
        static addPath(builder, pathOffset) {
            builder.addFieldOffset(1, pathOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param boolean isdir
         */
        static addIsdir(builder, isdir) {
            builder.addFieldInt8(2, +isdir, +false);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endFileInfo(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.FileInfo = FileInfo;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class Directory {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Directory
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Directory= obj
         * @returns Directory
         */
        static getRootAsDirectory(bb, obj) {
            return (obj || new Directory).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        name(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        path(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param number index
         * @param __std.FileInfo= obj
         * @returns __std.FileInfo
         */
        files(index, obj) {
            var offset = this.bb.__offset(this.bb_pos, 8);
            return offset ? (obj || new __std.FileInfo).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
        }
        ;
        /**
         * @returns number
         */
        filesLength() {
            var offset = this.bb.__offset(this.bb_pos, 8);
            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startDirectory(builder) {
            builder.startObject(3);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset nameOffset
         */
        static addName(builder, nameOffset) {
            builder.addFieldOffset(0, nameOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pathOffset
         */
        static addPath(builder, pathOffset) {
            builder.addFieldOffset(1, pathOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset filesOffset
         */
        static addFiles(builder, filesOffset) {
            builder.addFieldOffset(2, filesOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param Array.<flatbuffers.Offset> data
         * @returns flatbuffers.Offset
         */
        static createFilesVector(builder, data) {
            builder.startVector(4, data.length, 4);
            for (var i = data.length - 1; i >= 0; i--) {
                builder.addOffset(data[i]);
            }
            return builder.endVector();
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param number numElems
         */
        static startFilesVector(builder, numElems) {
            builder.startVector(4, numElems, 4);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endDirectory(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.Directory = Directory;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class FileInfoArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns FileInfoArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param FileInfoArgs= obj
         * @returns FileInfoArgs
         */
        static getRootAsFileInfoArgs(bb, obj) {
            return (obj || new FileInfoArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        path(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        module(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startFileInfoArgs(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pathOffset
         */
        static addPath(builder, pathOffset) {
            builder.addFieldOffset(0, pathOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset moduleOffset
         */
        static addModule(builder, moduleOffset) {
            builder.addFieldOffset(1, moduleOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endFileInfoArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.FileInfoArgs = FileInfoArgs;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ListArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ListArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ListArgs= obj
         * @returns ListArgs
         */
        static getRootAsListArgs(bb, obj) {
            return (obj || new ListArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        path(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        module(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startListArgs(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pathOffset
         */
        static addPath(builder, pathOffset) {
            builder.addFieldOffset(0, pathOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset moduleOffset
         */
        static addModule(builder, moduleOffset) {
            builder.addFieldOffset(1, moduleOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endListArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ListArgs = ListArgs;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class FileSystemResponse {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns FileSystemResponse
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param FileSystemResponse= obj
         * @returns FileSystemResponse
         */
        static getRootAsFileSystemResponse(bb, obj) {
            return (obj || new FileSystemResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns __std.FileSystemRetval
         */
        retvalType() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : __std.FileSystemRetval.NONE;
        }
        ;
        /**
         * @param flatbuffers.Table obj
         * @returns ?flatbuffers.Table
         */
        retval(obj) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startFileSystemResponse(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.FileSystemRetval retvalType
         */
        static addRetvalType(builder, retvalType) {
            builder.addFieldInt8(0, retvalType, __std.FileSystemRetval.NONE);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset retvalOffset
         */
        static addRetval(builder, retvalOffset) {
            builder.addFieldOffset(1, retvalOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endFileSystemResponse(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.FileSystemResponse = FileSystemResponse;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class WriteArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns WriteArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param WriteArgs= obj
         * @returns WriteArgs
         */
        static getRootAsWriteArgs(bb, obj) {
            return (obj || new WriteArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        path(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        value(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @returns __std.Format
         */
        format() {
            var offset = this.bb.__offset(this.bb_pos, 8);
            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : __std.Format.FromExtension;
        }
        ;
        /**
         * @returns number
         */
        indent() {
            var offset = this.bb.__offset(this.bb_pos, 10);
            return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
        }
        ;
        /**
         * @returns boolean
         */
        overwrite() {
            var offset = this.bb.__offset(this.bb_pos, 12);
            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startWriteArgs(builder) {
            builder.startObject(5);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pathOffset
         */
        static addPath(builder, pathOffset) {
            builder.addFieldOffset(0, pathOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset valueOffset
         */
        static addValue(builder, valueOffset) {
            builder.addFieldOffset(1, valueOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.Format format
         */
        static addFormat(builder, format) {
            builder.addFieldInt8(2, format, __std.Format.FromExtension);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param number indent
         */
        static addIndent(builder, indent) {
            builder.addFieldInt8(3, indent, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param boolean overwrite
         */
        static addOverwrite(builder, overwrite) {
            builder.addFieldInt8(4, +overwrite, +false);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endWriteArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.WriteArgs = WriteArgs;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ReadArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ReadArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ReadArgs= obj
         * @returns ReadArgs
         */
        static getRootAsReadArgs(bb, obj) {
            return (obj || new ReadArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        path(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @returns number
         */
        timeout() {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
        }
        ;
        /**
         * @returns __std.Encoding
         */
        encoding() {
            var offset = this.bb.__offset(this.bb_pos, 8);
            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : __std.Encoding.Bytes;
        }
        ;
        /**
         * @returns __std.Format
         */
        format() {
            var offset = this.bb.__offset(this.bb_pos, 10);
            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : __std.Format.FromExtension;
        }
        ;
        module(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 12);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startReadArgs(builder) {
            builder.startObject(5);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pathOffset
         */
        static addPath(builder, pathOffset) {
            builder.addFieldOffset(0, pathOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param number timeout
         */
        static addTimeout(builder, timeout) {
            builder.addFieldInt32(1, timeout, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.Encoding encoding
         */
        static addEncoding(builder, encoding) {
            builder.addFieldInt8(2, encoding, __std.Encoding.Bytes);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.Format format
         */
        static addFormat(builder, format) {
            builder.addFieldInt8(3, format, __std.Format.FromExtension);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset moduleOffset
         */
        static addModule(builder, moduleOffset) {
            builder.addFieldOffset(4, moduleOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endReadArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ReadArgs = ReadArgs;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ParamArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ParamArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ParamArgs= obj
         * @returns ParamArgs
         */
        static getRootAsParamArgs(bb, obj) {
            return (obj || new ParamArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        path(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @returns __std.ParamType
         */
        type() {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : __std.ParamType.Boolean;
        }
        ;
        defaultValue(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 8);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startParamArgs(builder) {
            builder.startObject(3);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset pathOffset
         */
        static addPath(builder, pathOffset) {
            builder.addFieldOffset(0, pathOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.ParamType type
         */
        static addType(builder, type) {
            builder.addFieldInt8(1, type, __std.ParamType.Boolean);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset defaultValueOffset
         */
        static addDefaultValue(builder, defaultValueOffset) {
            builder.addFieldOffset(2, defaultValueOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endParamArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ParamArgs = ParamArgs;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ParamValue {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ParamValue
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ParamValue= obj
         * @returns ParamValue
         */
        static getRootAsParamValue(bb, obj) {
            return (obj || new ParamValue).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        json(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startParamValue(builder) {
            builder.startObject(1);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset jsonOffset
         */
        static addJson(builder, jsonOffset) {
            builder.addFieldOffset(0, jsonOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endParamValue(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ParamValue = ParamValue;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ParamResponse {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ParamResponse
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ParamResponse= obj
         * @returns ParamResponse
         */
        static getRootAsParamResponse(bb, obj) {
            return (obj || new ParamResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns __std.ParamRetval
         */
        retvalType() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : __std.ParamRetval.NONE;
        }
        ;
        /**
         * @param flatbuffers.Table obj
         * @returns ?flatbuffers.Table
         */
        retval(obj) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startParamResponse(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.ParamRetval retvalType
         */
        static addRetvalType(builder, retvalType) {
            builder.addFieldInt8(0, retvalType, __std.ParamRetval.NONE);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset retvalOffset
         */
        static addRetval(builder, retvalOffset) {
            builder.addFieldOffset(1, retvalOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endParamResponse(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ParamResponse = ParamResponse;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ParseArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ParseArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ParseArgs= obj
         * @returns ParseArgs
         */
        static getRootAsParseArgs(bb, obj) {
            return (obj || new ParseArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        chars(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @returns __std.Format
         */
        format() {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : __std.Format.FromExtension;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startParseArgs(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset charsOffset
         */
        static addChars(builder, charsOffset) {
            builder.addFieldOffset(0, charsOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.Format format
         */
        static addFormat(builder, format) {
            builder.addFieldInt8(1, format, __std.Format.FromExtension);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endParseArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ParseArgs = ParseArgs;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ParseUnparseData {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ParseUnparseData
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ParseUnparseData= obj
         * @returns ParseUnparseData
         */
        static getRootAsParseUnparseData(bb, obj) {
            return (obj || new ParseUnparseData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        data(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startParseUnparseData(builder) {
            builder.startObject(1);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset dataOffset
         */
        static addData(builder, dataOffset) {
            builder.addFieldOffset(0, dataOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endParseUnparseData(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ParseUnparseData = ParseUnparseData;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class ParseUnparseResponse {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns ParseUnparseResponse
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param ParseUnparseResponse= obj
         * @returns ParseUnparseResponse
         */
        static getRootAsParseUnparseResponse(bb, obj) {
            return (obj || new ParseUnparseResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns __std.ParseUnparseRetval
         */
        retvalType() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : __std.ParseUnparseRetval.NONE;
        }
        ;
        /**
         * @param flatbuffers.Table obj
         * @returns ?flatbuffers.Table
         */
        retval(obj) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startParseUnparseResponse(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.ParseUnparseRetval retvalType
         */
        static addRetvalType(builder, retvalType) {
            builder.addFieldInt8(0, retvalType, __std.ParseUnparseRetval.NONE);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset retvalOffset
         */
        static addRetval(builder, retvalOffset) {
            builder.addFieldOffset(1, retvalOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endParseUnparseResponse(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.ParseUnparseResponse = ParseUnparseResponse;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class UnparseArgs {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns UnparseArgs
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param UnparseArgs= obj
         * @returns UnparseArgs
         */
        static getRootAsUnparseArgs(bb, obj) {
            return (obj || new UnparseArgs).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        object(optionalEncoding) {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
        }
        ;
        /**
         * @returns __std.Format
         */
        format() {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : __std.Format.FromExtension;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startUnparseArgs(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset objectOffset
         */
        static addObject(builder, objectOffset) {
            builder.addFieldOffset(0, objectOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.Format format
         */
        static addFormat(builder, format) {
            builder.addFieldInt8(1, format, __std.Format.FromExtension);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endUnparseArgs(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.UnparseArgs = UnparseArgs;
})(__std || (__std = {}));
/**
 * @constructor
 */
(function (__std) {
    class Message {
        constructor() {
            this.bb = null;
            this.bb_pos = 0;
        }
        /**
         * @param number i
         * @param flatbuffers.ByteBuffer bb
         * @returns Message
         */
        __init(i, bb) {
            this.bb_pos = i;
            this.bb = bb;
            return this;
        }
        ;
        /**
         * @param flatbuffers.ByteBuffer bb
         * @param Message= obj
         * @returns Message
         */
        static getRootAsMessage(bb, obj) {
            return (obj || new Message).__init(bb.readInt32(bb.position()) + bb.position(), bb);
        }
        ;
        /**
         * @returns __std.Args
         */
        argsType() {
            var offset = this.bb.__offset(this.bb_pos, 4);
            return offset ? /**  */ (this.bb.readUint8(this.bb_pos + offset)) : __std.Args.NONE;
        }
        ;
        /**
         * @param flatbuffers.Table obj
         * @returns ?flatbuffers.Table
         */
        args(obj) {
            var offset = this.bb.__offset(this.bb_pos, 6);
            return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         */
        static startMessage(builder) {
            builder.startObject(2);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param __std.Args argsType
         */
        static addArgsType(builder, argsType) {
            builder.addFieldInt8(0, argsType, __std.Args.NONE);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @param flatbuffers.Offset argsOffset
         */
        static addArgs(builder, argsOffset) {
            builder.addFieldOffset(1, argsOffset, 0);
        }
        ;
        /**
         * @param flatbuffers.Builder builder
         * @returns flatbuffers.Offset
         */
        static endMessage(builder) {
            var offset = builder.endObject();
            return offset;
        }
        ;
    }
    __std.Message = Message;
})(__std || (__std = {}));
